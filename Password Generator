import random
import string
import time

# language and previous passwords(global variables)
previous_passwords = []
language = 'en'

# check password strength
def check_password_strength(password):
    if len(password) < 8:
        return "Weak"
    elif len(password) >= 8 and len(password) < 12:
        return "Medium"
    elif len(password) >= 12:
        return "Strong"
    return "Weak"

# generate strong password
def generate_strong_password(length):
    all_characters = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(all_characters) for i in range(length))

# Password Expiry (after 30 days for demo)
def password_expiry(last_changed_time):
    current_time = time.time()
    if current_time - last_changed_time > 30 * 24 * 60 * 60:  # converted days t0 seconds
        return True
    return False

# Check password reuse
def check_reused_password(password):
    for prev_pass, _ in previous_passwords: 
        if prev_pass == password:
            return True
    return False

# Language Support
def translate_message(msg):
    if language == 'es':  # Spanish
        translations = {
            "Enter your password": "Introduce tu contraseña",
            "Password is weak, try again": "La contraseña es débil, inténtalo de nuevo",
            "Password is medium strength": "La contraseña tiene una fuerza media",
            "Password is strong": "La contraseña es fuerte",
            "Password reused, please choose a new one": "Contraseña reutilizada, por favor elige una nueva",
            "Password expired, please change it": "Contraseña caducada, por favor cámbiala",
            "Generating strong password": "Generando una contraseña fuerte",
            "Password generated": "Contraseña generada",
            "Password is not strong enough, generating a strong one": "La contraseña no es lo suficientemente fuerte, generando una fuerte",
            "Thank you": "Gracias"
        }
    else:  # English
        translations = {
            "Enter your password": "Enter your password",
            "Password is weak, try again": "Password is weak, try again",
            "Password is medium strength": "Password is medium strength",
            "Password is strong": "Password is strong",
            "Password reused, please choose a new one": "Password reused, please choose a new one",
            "Password expired, please change it": "Password expired, please change it",
            "Generating strong password": "Generating strong password",
            "Password generated": "Password generated",
            "Password is not strong enough, generating a strong one": "Password is not strong enough, generating a strong one",
            "Thank you": "Thank you"
        }
    
    return translations.get(msg, msg)

# ask user for password
def password_prompt():
    global language
    print("Choose language: English (en) / Spanish (es)")
    language = input("Enter language code: ").strip().lower()
    
    for i in range(3):
        password = input(translate_message("Enter your password: ") + " ")
        
        # Password strength check
        strength = check_password_strength(password)
        
        # Check password expiration
        if len(previous_passwords) > 0 and password_expiry(previous_passwords[-1][1]):
            print(translate_message("Password expired, please change it"))
            previous_passwords.clear()
            continue
        
        # Check for reused password
        if check_reused_password(password):
            print(translate_message("Password reused, please choose a new one"))
            continue
        
        if strength == "Weak" and i == 2:
            print(translate_message("Password is not strong enough, generating a strong one"))
            password = generate_strong_password(10)  # Default length is 10
            print(translate_message("Password generated") + ":", password)
            previous_passwords.append((password, time.time()))
            break
        
        elif strength == "Weak":
            print(translate_message("Password is weak, try again"))
        elif strength == "Medium":
            print(translate_message("Password is medium strength"))
            break
        elif strength == "Strong":
            print(translate_message("Password is strong"))
            break

# Run the password prompt
password_prompt()
